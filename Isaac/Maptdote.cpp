#include"monsterdote.h"
#include<time.h>
#include<stdio.h>

void drawmap();
std::string map[60] =
	{"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000011111110000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
	"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
};


int main()
{
	srand(time(NULL));
	while (true)
	{
		drawmap();
		Sleep(300);
	}
	
	return 0;
}
void drawmap()
{
	system("cls");

	for (int h = 0; h < 60; h++)
	{
		for (int w = 0; w < 120; w++)
		{
			if (map[h][w] == '0')
				std::cout << ' '; // 0은 공백으로 출력
			if (map[h][w] == '1')
				std::cout << '#'; // 1은 #으로 출력
		}
		std::cout << std::endl;
	}

	const int monsterWidth = 15;
	const int monsterHeight = 8;

	int monsterX, monsterY;
	bool validPosition = false;

	while (!validPosition)
	{
		// 가능한 랜덤 위치 생성 (몬스터 크기를 고려)
		monsterX = rand() % (120 - monsterWidth);
		monsterY = rand() % (60 - monsterHeight);

		// 몬스터가 겹치지 않도록 유효성 검사
		validPosition = true;
		for (int i = 0; i < monsterHeight; ++i)
		{
			for (int j = 0; j < monsterWidth; ++j)
			{
				if (map[monsterY + i][monsterX + j] == '1')
				{
					validPosition = false;
					break;
				}
			}
			if (!validPosition)
				break;
		}
	}

	// 유효한 위치에 몬스터 그리기
	drawMonster(monsterX, monsterY);
}